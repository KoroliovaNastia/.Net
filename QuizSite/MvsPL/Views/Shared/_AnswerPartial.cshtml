@model MvsPL.Models.AnswerViewModel

@*@using (Html.BeginForm()) 
{*@
    @*@Html.AntiForgeryToken()*@
<script>
        var AnswerModel = function(answers) {
                            var self = this;
                            self.answers = ko.observableArray(answers);

                            self.addAnswer = function() {
                                self.answers.push({
                                    Text: "",
                                    QuestionId: ""
                                });
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("CreateNewAnswer", "Question")",
                                    data: ko.toJSON(AnswerModel).self.answers, // Serialize to JSON and take users array
                                accept: 'application/json',
                                success: function (answer) { text("Answer add"); } // Your success callback
                            });
                            };
                        };
        ko.applyBindings(AnswerModel);


        var json = ko.toJSON(AnswerModel);
        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateNewAnswer", "Question")",
            data: ko.toJSON(AnswerModel).self.answers, // Serialize to JSON and take users array
            accept: 'application/json',
            success: function (answer) { text("Answer add"); } // Your success callback
        });
    </script>
<div class="form-group" data-bind="foreach: answers">
    <div class="form-horizontal">
        <h4>AnswerViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.QuestionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
</div>

    @*}*@

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
